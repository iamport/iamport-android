apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlinx-serialization'
apply plugin: 'maven-publish'

android {
    namespace "com.iamport.sdk"

    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33
        versionCode Versions.versionCode // yymmdd000
        versionName Versions.versionName // prod(x.y.z), dev(x.y.z-dev00), poc(x.y.z-poc00)
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    buildFeatures {
        dataBinding true
    }

    lintOptions {
        abortOnError false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                from components.release
                groupId = 'com.github.iamport'
                artifactId = 'iamport-android'
                version = Versions.versionName
            }
        }
    }
}

//// Because the components are created only during the afterEvaluate phase, you must
//// configure your publications using the afterEvaluate() lifecycle method.
//afterEvaluate {
//    publishing {
//        publications {
//            // Creates a Maven publication called "release".
//            release(MavenPublication) {
//                // Applies the component for the release build variant.
//                from components.release
//
//                // You can then customize attributes of the publication as shown below.
//                groupId = 'com.github.iamport'
//                artifactId = 'iamport-android'
//                version = Versions.versionName
//            }
////            // Creates a Maven publication called “debug”.
////            debug(MavenPublication) {
////                // Applies the component for the debug build variant.
////                from components.debug
////
////                groupId = 'com.github.iamport'
////                artifactId = 'iamport-android-debug'
////                version = Versions.versionName
////            }
//        }
//    }
//}


dependencies {

    implementation Libs.multidex
    implementation Libs.kotlin_stdlib_jdk
    implementation Libs.core_ktx
    implementation Libs.appcompat

    testImplementation Libs.robolectric
    testImplementation Libs.mokito_core
    testImplementation Libs.mokito_inline
    testImplementation Libs.mokito_android
//    testImplementation Libs.mokito_kotlin

    testImplementation Libs.junit
    androidTestImplementation Libs.testJunit
    androidTestImplementation Libs.espresso_core

    testImplementation Libs.androidx_test
//    androidTestImplementation Libs.androidx_test
//    androidTestImplementation Libs.androidx_test_runner
//    androidTestImplementation Libs.androidx_test_rules

    // Android Support/Architecture
    implementation Libs.constraintlayout
    implementation Libs.lifecycle_extensions
    implementation Libs.lifecycle_viewmodel_ktx
    implementation Libs.lifecycle_livedata_ktx
    implementation Libs.lifecycle_common
    implementation Libs.material

    implementation Libs.activity_ktx
    implementation Libs.fragment_ktx

    implementation Libs.koin_core
    testImplementation Libs.koin_test
    implementation Libs.koin_android
    implementation Libs.koin_android_compat
    implementation Libs.koin_android_compose

    // Retorofit
    implementation Libs.retrofit
    implementation Libs.converter_gson
    implementation Libs.logging_interceptor

    // Gson
    implementation Libs.gson

    // Logger
    implementation Libs.logger

    // Rx
    implementation Libs.rxjava
    implementation Libs.rxandroid
    implementation Libs.rxjava2_debug

    // loading animation
    implementation Libs.spinKit

//    debugImplementation Libs.chuck
//    releaseImplementation Libs.releaseChuck

    implementation Libs.serialization
}